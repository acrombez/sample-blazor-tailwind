@implements IAsyncDisposable
@inject ILocalStorageService localStorage
@inject IJSRuntime JS

<label class="flex cursor-pointer gap-2">
    <svg xmlns="http://www.w3.org/2000/svg"
         width="20"
         height="20"
         viewBox="0 0 24 24"
         fill="none"
         stroke="currentColor"
         stroke-width="2"
         stroke-linecap="round"
         stroke-linejoin="round">
        <circle cx="12" cy="12" r="5" />
        <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4" />
    </svg>
    <input type="checkbox" class="toggle" checked="@_darkMode" @onchange="ToggleTheme"/>
    <svg xmlns="http://www.w3.org/2000/svg"
         width="20"
         height="20"
         viewBox="0 0 24 24"
         fill="none"
         stroke="currentColor"
         stroke-width="2"
         stroke-linecap="round"
         stroke-linejoin="round">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
</label>

@code {
    private bool _darkMode;
    private IJSObjectReference _themeModule = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _themeModule = await JS.InvokeAsync<IJSObjectReference>("import", "./Layout/DarkModeToggle.razor.js");

            var theme = await localStorage.GetItemAsStringAsync("theme");
            _darkMode = theme == "dark" ? true : false;
            StateHasChanged();

            await _themeModule.InvokeVoidAsync("setTheme", theme);
        }
    }

    private async Task ToggleTheme(ChangeEventArgs args)
    {
        _darkMode = (bool)args.Value!;
        var theme = _darkMode ? "dark" : "light";
        await localStorage.SetItemAsStringAsync("theme", theme);

        await _themeModule.InvokeVoidAsync("setTheme", theme);
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (_themeModule is not null)
        {
            await _themeModule.DisposeAsync();
        }
    }
}